* {
  box-sizing: border-box;
}

.interactive {
  min-height: 40px;
  min-width: 40px;
  border-radius: 20px;
  cursor: pointer;
  transition: 200ms;
  border: none;
  color: #fff;
  background-color: #689;
  &:hover {
    background-color: #8ab;
  }
}

body {
  margin: 0;
  font-family: sans-serif;
  background-color: #333;
  color: #fff;
  & > .container {
    max-width: 1300px;
    padding: 1em 2em;
    margin: 0 auto;
  }
}

#control-panel {
  padding: 1em;
  gap: 1em;
  display: flex;
  align-items: center;
  & button {
    @extend .interactive;
    font-size: 1rem;
    font-weight: 600;
    line-height: 1;
    padding: 0.75em 1.25em;
    border: none;
    border-radius: 1.25em;
  }
}

#gallery {
  $imgMinWidth: calc(min(240px, 34vw));
  $gap: 0.5em;
  display: grid;
  grid-auto-flow: dense;
  grid-template-columns: repeat(auto-fit, minmax($imgMinWidth, auto));
  width: 100%;
  justify-items: stretch;
  justify-content: stretch;
  gap: $gap;
  transition: 200ms;
  & img {
    display: block;
    width: 100%;
    height: 100%; //aligns to grid at the expense of cropping the image
    grid-column: span 1;
    min-width: $imgMinWidth;
    max-width: calc($imgMinWidth * 2);
    object-fit: cover;
    transition: 200ms;
    &.enlarged {
      grid-column: span 2;
      grid-row: span 2; //really?
      max-width: calc($imgMinWidth * 4);
    }
  }
}

#jumpToTop {
  @extend .interactive;
  font-size: 3rem;
  line-height: 1;
  padding: 0.5rem;
  border-radius: 2rem;
  min-height: 4rem;
  min-width: 4rem;
  padding-left: 0.375em;
  padding-right: 0.125em;
  transform: rotate(90deg);
  display: block;
  position: fixed; //possible pure CSS solution (sticky bottom)?
  bottom: 0.5em;
  right: 0.5em;
  text-decoration: none;
  box-shadow: 0 2px 16px 0 #2229;
  opacity: 0.5;
  &:hover {
    opacity: 1;
  }
}
